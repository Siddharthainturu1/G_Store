{"ast":null,"code":"// upload Product\nimport { GET_PRODUCT_FAILURE, GET_PRODUCT_REQUEST, GET_PRODUCT_SUCCESS, KIDS_PRODUCT_FAILURE, KIDS_PRODUCT_REQUEST, KIDS_PRODUCT_SUCCESS, MEN_PRODUCT_FAILURE, MEN_PRODUCT_REQUEST, MEN_PRODUCT_SUCCESS, STRIPE_PAYMENT_FAILURE, STRIPE_PAYMENT_REQUEST, STRIPE_PAYMENT_SUCCESS, UPLOAD_PRODUCT_FAILURE, UPLOAD_PRODUCT_REQUEST, UPLOAD_PRODUCT_SUCCESS, WOMEN_PRODUCT_FAILURE, WOMEN_PRODUCT_REQUEST, WOMEN_PRODUCT_SUCCESS } from \"./products.actionTypes\";\nimport Axios from \"axios\";\nimport { setAlert } from \"../layout/layout.actions\";\nimport { placeOrder } from \"../orders/orders.actions\";\nimport { setAuthToken } from \"../../util/setAuthToken\"; // upload a product\n\nlet uploadProduct = (product, history) => {\n  return async dispatch => {\n    try {\n      let config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      dispatch({\n        type: UPLOAD_PRODUCT_REQUEST\n      });\n      let response = await Axios.post(`/product/upload`, JSON.stringify(product), config);\n      dispatch({\n        type: UPLOAD_PRODUCT_SUCCESS,\n        payload: response.data\n      });\n      history.push('/');\n    } catch (error) {\n      dispatch({\n        type: UPLOAD_PRODUCT_FAILURE,\n        payload: error\n      });\n    }\n  };\n}; // get MEN's Collection\n\n\nlet getMensCollection = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: MEN_PRODUCT_REQUEST\n      });\n      let response = await Axios.get('/product/men');\n      dispatch({\n        type: MEN_PRODUCT_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: MEN_PRODUCT_FAILURE,\n        payload: error\n      });\n    }\n  };\n}; // get Kid's Collection\n\n\nlet getKidsCollection = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: KIDS_PRODUCT_REQUEST\n      });\n      let response = await Axios.get('/product/kids');\n      dispatch({\n        type: KIDS_PRODUCT_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: KIDS_PRODUCT_FAILURE,\n        payload: error\n      });\n    }\n  };\n}; // get Women's Collection\n\n\nlet getWomensCollection = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: WOMEN_PRODUCT_REQUEST\n      });\n      let response = await Axios.get('/product/women');\n      dispatch({\n        type: WOMEN_PRODUCT_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: WOMEN_PRODUCT_FAILURE,\n        payload: error\n      });\n    }\n  };\n}; // get Electronics's Collection\n\n\nlet getElectronicsCollection = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: ELECTRONICS_PRODUCT_REQUEST\n      });\n      let response = await Axios.get('/product/');\n      dispatch({\n        type: ELECTRONICS_PRODUCT_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: ELECTRONICS_PRODUCT_FAILURE,\n        payload: error\n      });\n    }\n  };\n}; // get single Product\n\n\nlet getProduct = productId => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: GET_PRODUCT_REQUEST\n      });\n      let response = await Axios.get(`/product/${productId}`);\n      dispatch({\n        type: GET_PRODUCT_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_PRODUCT_FAILURE,\n        payload: error\n      });\n    }\n  };\n}; // MAKE STRIPE PAYMENT\n\n\nlet makeStripePayment = (body, history, order) => {\n  return async dispatch => {\n    try {\n      if (localStorage.token) {\n        setAuthToken(localStorage.getItem('token'));\n      }\n\n      let config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      dispatch({\n        type: STRIPE_PAYMENT_REQUEST\n      });\n      let response = await Axios.post(`/payment/pay`, JSON.stringify(body), config);\n      dispatch({\n        type: STRIPE_PAYMENT_SUCCESS,\n        payload: response.data\n      });\n      dispatch(placeOrder(order, history));\n    } catch (error) {\n      dispatch(setAlert(JSON.stringify(error)), 'danger');\n      dispatch({\n        type: STRIPE_PAYMENT_FAILURE,\n        payload: error\n      });\n    }\n  };\n};\n\nexport { uploadProduct, getMensCollection, getKidsCollection, getWomensCollection, getProduct, makeStripePayment };","map":{"version":3,"sources":["C:/Users/HP/Desktop/brainskart-react-app/client/src/redux/products/products.actions.js"],"names":["GET_PRODUCT_FAILURE","GET_PRODUCT_REQUEST","GET_PRODUCT_SUCCESS","KIDS_PRODUCT_FAILURE","KIDS_PRODUCT_REQUEST","KIDS_PRODUCT_SUCCESS","MEN_PRODUCT_FAILURE","MEN_PRODUCT_REQUEST","MEN_PRODUCT_SUCCESS","STRIPE_PAYMENT_FAILURE","STRIPE_PAYMENT_REQUEST","STRIPE_PAYMENT_SUCCESS","UPLOAD_PRODUCT_FAILURE","UPLOAD_PRODUCT_REQUEST","UPLOAD_PRODUCT_SUCCESS","WOMEN_PRODUCT_FAILURE","WOMEN_PRODUCT_REQUEST","WOMEN_PRODUCT_SUCCESS","Axios","setAlert","placeOrder","setAuthToken","uploadProduct","product","history","dispatch","config","headers","type","response","post","JSON","stringify","payload","data","push","error","getMensCollection","get","getKidsCollection","getWomensCollection","getElectronicsCollection","ELECTRONICS_PRODUCT_REQUEST","ELECTRONICS_PRODUCT_SUCCESS","ELECTRONICS_PRODUCT_FAILURE","getProduct","productId","makeStripePayment","body","order","localStorage","token","getItem"],"mappings":"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","sourcesContent":["// upload Product\r\nimport {\r\n    GET_PRODUCT_FAILURE,\r\n    GET_PRODUCT_REQUEST, GET_PRODUCT_SUCCESS,\r\n    KIDS_PRODUCT_FAILURE,\r\n    KIDS_PRODUCT_REQUEST, KIDS_PRODUCT_SUCCESS,\r\n    MEN_PRODUCT_FAILURE,\r\n    MEN_PRODUCT_REQUEST, MEN_PRODUCT_SUCCESS, STRIPE_PAYMENT_FAILURE, STRIPE_PAYMENT_REQUEST, STRIPE_PAYMENT_SUCCESS,\r\n    UPLOAD_PRODUCT_FAILURE,\r\n    UPLOAD_PRODUCT_REQUEST,\r\n    UPLOAD_PRODUCT_SUCCESS, WOMEN_PRODUCT_FAILURE, WOMEN_PRODUCT_REQUEST, WOMEN_PRODUCT_SUCCESS\r\n} from \"./products.actionTypes\";\r\nimport Axios from \"axios\";\r\nimport {setAlert} from \"../layout/layout.actions\";\r\nimport {placeOrder} from \"../orders/orders.actions\";\r\nimport {setAuthToken} from \"../../util/setAuthToken\";\r\n\r\n// upload a product\r\nlet uploadProduct = (product , history) => {\r\n    return async (dispatch) => {\r\n         try {\r\n             let config = {\r\n                 headers : {\r\n                     'Content-Type' : 'application/json'\r\n                 }\r\n             };\r\n             dispatch({type : UPLOAD_PRODUCT_REQUEST});\r\n             let response = await Axios.post(`/product/upload`, JSON.stringify(product) , config);\r\n             dispatch({ type : UPLOAD_PRODUCT_SUCCESS , payload : response.data});\r\n             history.push('/');\r\n         }\r\n         catch (error) {\r\n              dispatch({type : UPLOAD_PRODUCT_FAILURE , payload: error});\r\n         }\r\n    }\r\n};\r\n\r\n// get MEN's Collection\r\nlet getMensCollection = () => {\r\n    return async (dispatch) => {\r\n        try{\r\n            dispatch({type : MEN_PRODUCT_REQUEST});\r\n            let response = await Axios.get('/product/men');\r\n            dispatch({type : MEN_PRODUCT_SUCCESS , payload : response.data});\r\n        }\r\n        catch (error) {\r\n            dispatch({ type : MEN_PRODUCT_FAILURE , payload : error});\r\n        }\r\n    };\r\n};\r\n\r\n// get Kid's Collection\r\nlet getKidsCollection = () => {\r\n    return async (dispatch) => {\r\n        try{\r\n            dispatch({type : KIDS_PRODUCT_REQUEST});\r\n            let response = await Axios.get('/product/kids');\r\n            dispatch({type : KIDS_PRODUCT_SUCCESS , payload : response.data});\r\n        }\r\n        catch (error) {\r\n            dispatch({ type : KIDS_PRODUCT_FAILURE , payload : error});\r\n        }\r\n    };\r\n};\r\n\r\n// get Women's Collection\r\nlet getWomensCollection = () => {\r\n    return async (dispatch) => {\r\n        try{\r\n            dispatch({type : WOMEN_PRODUCT_REQUEST});\r\n            let response = await Axios.get('/product/women');\r\n            dispatch({type : WOMEN_PRODUCT_SUCCESS , payload : response.data});\r\n        }\r\n        catch (error) {\r\n            dispatch({ type : WOMEN_PRODUCT_FAILURE , payload : error});\r\n        }\r\n    };\r\n};\r\n\r\n// get Electronics's Collection\r\nlet getElectronicsCollection = () => {\r\n    return async (dispatch) => {\r\n        try{\r\n            dispatch({type : ELECTRONICS_PRODUCT_REQUEST});\r\n            let response = await Axios.get('/product/');\r\n            dispatch({type : ELECTRONICS_PRODUCT_SUCCESS , payload : response.data});\r\n        }\r\n        catch (error) {\r\n            dispatch({ type : ELECTRONICS_PRODUCT_FAILURE , payload : error});\r\n        }\r\n    };\r\n};\r\n\r\n// get single Product\r\nlet getProduct = (productId) => {\r\n    return async (dispatch) => {\r\n        try{\r\n            dispatch({type : GET_PRODUCT_REQUEST});\r\n            let response = await Axios.get(`/product/${productId}`);\r\n            dispatch({type : GET_PRODUCT_SUCCESS , payload : response.data});\r\n        }\r\n        catch (error) {\r\n            dispatch({ type : GET_PRODUCT_FAILURE , payload : error});\r\n        }\r\n    };\r\n};\r\n\r\n// MAKE STRIPE PAYMENT\r\nlet makeStripePayment = (body , history, order) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            if(localStorage.token){\r\n                setAuthToken(localStorage.getItem('token'));\r\n            }\r\n            let config = {\r\n                headers : {\r\n                    'Content-Type' : 'application/json'\r\n                }\r\n            };\r\n            dispatch({type : STRIPE_PAYMENT_REQUEST});\r\n            let response = await Axios.post(`/payment/pay`, JSON.stringify(body) , config);\r\n            dispatch({ type : STRIPE_PAYMENT_SUCCESS , payload : response.data});\r\n            dispatch(placeOrder(order , history));\r\n        }\r\n        catch (error) {\r\n            dispatch(setAlert(JSON.stringify(error)) , 'danger');\r\n            dispatch({type : STRIPE_PAYMENT_FAILURE , payload: error});\r\n        }\r\n    }\r\n};\r\n\r\nexport {uploadProduct,\r\n    getMensCollection,\r\n    getKidsCollection,\r\n    getWomensCollection,\r\n    getProduct,\r\n    makeStripePayment}\r\n"]},"metadata":{},"sourceType":"module"}